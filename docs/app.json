[{"name":"app.R","content":"library(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(leaflet)\r\nlibrary(sf)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\n\r\n# Cargar datos\r\nvulnerabilidad <- st_read(\"../data/vulnerabilidad-barrios.geojson\")\r\nayuda_adiccion <- st_read(\"../data/addiccions-adicciones.geojson\")\r\nayuda_discapacidad <- st_read(\"../data/discapacitat-discapacidad.geojson\")\r\nayuda_sinhogar <- st_read(\"../data/sense-llar-sin-hogar.geojson\")\r\nayuda_mujer <- st_read(\"../data/dona-mujer.geojson\")\r\n\r\n# Agregar la columna de barrio a los dataframes de ayudas\r\nayuda_adiccion <- st_join(ayuda_adiccion, vulnerabilidad, join = st_within)\r\nayuda_discapacidad <- st_join(ayuda_discapacidad, vulnerabilidad, join = st_within)\r\nayuda_sinhogar <- st_join(ayuda_sinhogar, vulnerabilidad, join = st_within)\r\nayuda_mujer <- st_join(ayuda_mujer, vulnerabilidad, join = st_within)\r\n\r\nui <- dashboardPage(\r\n  dashboardHeader(title = \"Vulnerabilidad por barrios\"),\r\n  dashboardSidebar(\r\n    sidebarMenu(\r\n      menuItem(\"Mapa\", tabName = \"mapa\", icon = icon(\"map\")),\r\n      menuItem(\"Gráfico de Barras\", tabName = \"barras\", icon = icon(\"bar-chart\"))\r\n    ),\r\n    selectInput(\r\n      \"barrio\",\r\n      \"Seleccionar Barrio:\",\r\n      choices = c(\"Todos\", unique(vulnerabilidad$nombre)),\r\n      selected = \"Todos\"\r\n    ),\r\n    selectInput(\r\n      \"indice\",\r\n      \"Seleccionar Índice de Vulnerabilidad:\",\r\n      choices = c(\"Global\" = \"ind_global\", \"Equipamiento\" = \"ind_equip\", \"Demográfico\" = \"ind_dem\", \"Económico\" = \"ind_econom\"),\r\n      selected = \"ind_global\"\r\n    ),\r\n    sliderInput(\r\n      \"vul_range\",\r\n      \"Rango de Vulnerabilidad:\",\r\n      min = min(vulnerabilidad$ind_global, na.rm = TRUE),\r\n      max = max(vulnerabilidad$ind_global, na.rm = TRUE),\r\n      value = range(vulnerabilidad$ind_global, na.rm = TRUE),\r\n      step = 0.1\r\n    ),\r\n    checkboxGroupInput(\r\n      \"ayudas\",\r\n      \"Puntos de ayuda a Mostrar:\",\r\n      choices = c(\r\n        \"Ayuda Adicción\" = \"ayuda_adiccion\",\r\n        \"Ayuda a Discapacitados\" = \"ayuda_discapacidad\",\r\n        \"Ayuda Sin Hogar\" = \"ayuda_sinhogar\",\r\n        \"Ayuda a Mujeres\" = \"ayuda_mujer\"\r\n      ),\r\n      selected = c(\"ayuda_adiccion\", \"ayuda_discapacidad\", \"ayuda_sinhogar\", \"ayuda_mujer\")\r\n    )\r\n  ),\r\n  dashboardBody(\r\n    tabItems(\r\n      tabItem(tabName = \"mapa\",\r\n              leafletOutput(\"vulnerabilidades\")\r\n      ),\r\n      tabItem(tabName = \"barras\",\r\n              plotOutput(\"barplot\")\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  # Función para añadir puntos al mapa\r\n  add_points_to_map <- function(map, points_data, color, group_name) {\r\n    leafletProxy(map) %>%\r\n      addCircleMarkers(\r\n        data = points_data,\r\n        color = color,\r\n        fillOpacity = 0.7,\r\n        radius = 5,\r\n        group = group_name,\r\n        popup = ~paste(\"Nombre:\", equipamien)\r\n      )\r\n  }\r\n  \r\n  # Actualizar el rango del slider basado en el índice seleccionado\r\n  observe({\r\n    updateSliderInput(session, \"vul_range\",\r\n                      min = min(vulnerabilidad[[input$indice]], na.rm = TRUE),\r\n                      max = max(vulnerabilidad[[input$indice]], na.rm = TRUE),\r\n                      value = range(vulnerabilidad[[input$indice]], na.rm = TRUE),\r\n                      step = 0.1)\r\n  })\r\n  \r\n  output$vulnerabilidades <- renderLeaflet({\r\n    leaflet(data = vulnerabilidad) %>%\r\n      setView(lng = -0.3763, lat = 39.469, zoom = 12) %>%\r\n      addTiles()\r\n  })\r\n  \r\n  observe({\r\n    selected_data <- vulnerabilidad\r\n    \r\n    # Filtrar por barrio si no es \"Todos\"\r\n    if (input$barrio != \"Todos\") {\r\n      selected_data <- subset(selected_data, nombre == input$barrio)\r\n    }\r\n    \r\n    # Filtrar por rango de vulnerabilidad\r\n    selected_data <- subset(selected_data, selected_data[[input$indice]] >= input$vul_range[1] & selected_data[[input$indice]] <= input$vul_range[2])\r\n    \r\n    pal <- colorBin(\r\n      palette = \"YlOrRd\",\r\n      domain = vulnerabilidad[[input$indice]],\r\n      bins = 7,\r\n      reverse = TRUE\r\n    )\r\n    \r\n    leafletProxy(\"vulnerabilidades\", data = selected_data) %>%\r\n      clearShapes() %>%\r\n      clearControls() %>%  # Limpiar leyendas anteriores\r\n      addPolygons(\r\n        fillColor = ~pal(selected_data[[input$indice]]),\r\n        fillOpacity = 0.7,\r\n        color = \"white\",\r\n        weight = 1,\r\n        popup = ~paste(\"Barrio:\", nombre, \"<br>\", \"Vulnerabilidad:\", selected_data[[input$indice]])\r\n      ) %>%\r\n      addLegend(\r\n        pal = pal,\r\n        values = ~selected_data[[input$indice]],\r\n        opacity = 0.7,\r\n        title = \"Vulnerabilidad\",\r\n        position = \"bottomright\"\r\n      )\r\n    \r\n    # Filtrar puntos de ayuda por barrio\r\n    if (input$barrio != \"Todos\") {\r\n      ayuda_adiccion_filtered <- subset(ayuda_adiccion, nombre == input$barrio)\r\n      ayuda_discapacidad_filtered <- subset(ayuda_discapacidad, nombre == input$barrio)\r\n      ayuda_sinhogar_filtered <- subset(ayuda_sinhogar, nombre == input$barrio)\r\n      ayuda_mujer_filtered <- subset(ayuda_mujer, nombre == input$barrio)\r\n    } else {\r\n      ayuda_adiccion_filtered <- ayuda_adiccion\r\n      ayuda_discapacidad_filtered <- ayuda_discapacidad\r\n      ayuda_sinhogar_filtered <- ayuda_sinhogar\r\n      ayuda_mujer_filtered <- ayuda_mujer\r\n    }\r\n    \r\n    # Limpiar los grupos de puntos de ayuda anteriores\r\n    leafletProxy(\"vulnerabilidades\") %>%\r\n      clearGroup(\"Ayuda Adicción\") %>%\r\n      clearGroup(\"Ayuda a Discapacitados\") %>%\r\n      clearGroup(\"Ayuda Sin Hogar\") %>%\r\n      clearGroup(\"Ayuda a Mujeres\")\r\n    \r\n    # Agregar los puntos de ayuda seleccionados\r\n    if (\"ayuda_adiccion\" %in% input$ayudas) {\r\n      add_points_to_map(\"vulnerabilidades\", ayuda_adiccion_filtered, \"red\", \"Ayuda Adicción\")\r\n    }\r\n    if (\"ayuda_discapacidad\" %in% input$ayudas) {\r\n      add_points_to_map(\"vulnerabilidades\", ayuda_discapacidad_filtered, \"blue\", \"Ayuda a Discapacitados\")\r\n    }\r\n    if (\"ayuda_sinhogar\" %in% input$ayudas) {\r\n      add_points_to_map(\"vulnerabilidades\", ayuda_sinhogar_filtered, \"green\", \"Ayuda Sin Hogar\")\r\n    }\r\n    if (\"ayuda_mujer\" %in% input$ayudas) {\r\n      add_points_to_map(\"vulnerabilidades\", ayuda_mujer_filtered, \"purple\", \"Ayuda a Mujeres\")\r\n    }\r\n  })\r\n  \r\n  output$barplot <- renderPlot({\r\n    selected_data <- vulnerabilidad\r\n    if (input$barrio != \"Todos\"){\r\n    selected_data = subset(selected_data, nombre== input$barrio)}\r\n    selected_data <- subset(selected_data, selected_data[[input$indice]] >= input$vul_range[1] & selected_data[[input$indice]] <= input$vul_range[2])\r\n    \r\n    ggplot(selected_data, aes(x = reorder(nombre, -selected_data[[input$indice]]), y = selected_data[[input$indice]])) +\r\n      geom_bar(stat = \"identity\",fill = \"#98ff98\") +\r\n      theme_minimal() +\r\n      labs(\r\n        title = \"Índice de Vulnerabilidad por Barrio\",\r\n        x = \"Barrio\",\r\n        y = \"Índice de Vulnerabilidad\"\r\n      ) +\r\n      theme(axis.text.y = element_text(angle = 45, hjust = 1))+\r\n      coord_flip()  # Gira el gráfico para facilitar la lectura\r\n  })\r\n}\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
