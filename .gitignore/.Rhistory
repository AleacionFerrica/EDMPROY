y = "MCC")+
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 80))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(reshape2)
library(ggplot2)
library(partykit)
library(pre)
compas = read_csv("C:/Users/jorge/Downloads/EDM/Practica 4 Sin sol/Practica 4 Sin sol/compas-scores-two-years.csv")
bikes =  read_csv("C:/Users/jorge/Downloads/EDM/Practica 4 Sin sol/Practica 4 Sin sol/Bike-Sharing-Dataset/day.csv")
names(compas)[12]
nombre_actual <- names(compas)[12]
# Cambiar el nombre de la columna
names(compas)[12] <- "decile_score"
compas <- compas %>% filter(days_b_screening_arrest >= -30 & days_b_screening_arrest <= 30 &
race %in% c("African-American","Caucasian"))
#compas <- compas %>%filter(race == c("African-American","Caucasian"))
compas
compas$recidivism = ifelse(compas$decile_score >= 4, 1, 0)
ggplot(resultados_en, aes(x = Vectorizer, y = MathewMCC, fill = Modelo)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = MathewMCC - Std,
ymax = MathewMCC + Std),
position = position_dodge(width = 0.9),
width = 0.25) +
labs(title = "Mathew MCC for model by vectorization in English",
x = "Vectorization",
y = "MCC")+
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 80))
#theme_minimal()
ggplot(TFIDF, aes(x = Vectorizer, y = MathewMCC, fill = Modelo)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = MathewMCC - Std,
ymax = MathewMCC + Std),
position = position_dodge(width = 0.9),
width = 0.25) +
labs(title = "Mathew MCC for model by vectorization in Spanish ",
x = "Vectorization",
y = "MCC")+
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 80))
#theme_minimal()
library(readr)
TFIDF <- read_csv("C:/Users/jorge/Downloads/TFIDF.csv")
View(TFIDF)
TFIDF$MathewMCC = TFIDF$MathewMCC *100
TFIDF$Std = TFIDF$Std *100
ggplot(TFIDF, aes(x = Vectorizer, y = MathewMCC, fill = Modelo)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = MathewMCC - Std,
ymax = MathewMCC + Std),
position = position_dodge(width = 0.9),
width = 0.25) +
labs(title = "Mathew MCC for model by vectorization in Spanish ",
x = "Vectorization",
y = "MCC")+
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 80))
#theme_minimal()
library(readr)
TFIDF <- read_csv("C:/Users/jorge/Downloads/TFIDF.csv")
View(TFIDF)
library(readr)
TFIDF <- read_csv("C:/Users/jorge/Downloads/TFIDF.csv")
View(TFIDF)
TFIDF$MathewMCC = TFIDF$MathewMCC *100
TFIDF$Std = TFIDF$Std *100
ggplot(TFIDF, aes(x = Vectorizer, y = MathewMCC, fill = Modelo)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = MathewMCC - Std,
ymax = MathewMCC + Std),
position = position_dodge(width = 0.9),
width = 0.25) +
labs(title = "Mathew MCC for model by vectorization in Spanish ",
x = "Vectorization",
y = "MCC")+
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 80))
#theme_minimal()
install.packages("shiny")
install.packages("shiny")
shiny::runApp('kk')
library(readr)
vulnerabilidad_por_barrios <- read_delim("C:/Users/jorge/Downloads/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(vulnerabilidad_por_barrios)
vulnerabilidad_por_barrios <- read_delim("C:/Users/jorge/Downloads/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vulnerabilidad
vulnerabilidad
vulnerabilidad$Vul_Global
plot(vulnerabilidad$Vul_Global)
autoplot(vulnerabilidad$Vul_Global)
library(ggplot)
library(ggplot2)
autoplot(vulnerabilidad$Vul_Global)
library(ggplot2)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
```{r}
autoplot(vulnerabilidad$Vul_Global)
library(ggplot2)
autoplot(vulnerabilidad$Vul_Global)
plot(vulnerabilidad$Vul_Global)
vulnerabilidad
preciocompra <- read_delim("C:/Users/jorge/Downloads/EDMPROY/precio-de-compra-en-idealista.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
preciocompra
viviendas_proc_publica <- read_delim("C:/Users/jorge/Downloads/EDMPROY/vivendes-proteccio-publica-vpp-viviendas-proteccion-publica-vpp.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
viviendas_proc_publica
library(ggplot2)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
precio_compra <- read_delim("C:/Users/jorge/Downloads/EDMPROY/precio-de-compra-en-idealista.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_mujer <- read_delim("C:/Users/jorge/Downloads/EDMPROY/dona-mujer.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_sinhogar <- read_delim("C:/Users/jorge/Downloads/EDMPROY/sense-llar-sin-hogar.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_adiccion <- read_delim("C:/Users/jorge/Downloads/EDMPROY/discapacitat-discapacidad.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_discapacidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/addiccions-adicciones.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_mujer
ayuda_discapacidad
ayuda_adiccion
ayuda_sinhogar
ayuda_adiccion$geo_point_2d
ayuda_adiccion$geo_point_2d[1]
ayuda_adiccion$geo_point_2d[1][1]
ayuda_adiccion$geo_point_2d[1]
preciocompra$`Geo Point`
preciocompra$`Geo Shape`
preciocompra$`Geo Shape`[0]
preciocompra$`Geo Shape`[1]
shiny::runApp('EDM')
runApp('EDM')
library(ggplot2)
library(dplyr)
library(sf)
library(jsonlite)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
precio_compra <- read_delim("C:/Users/jorge/Downloads/EDMPROY/precio-de-compra-en-idealista.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_mujer <- read_delim("C:/Users/jorge/Downloads/EDMPROY/dona-mujer.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_sinhogar <- read_delim("C:/Users/jorge/Downloads/EDMPROY/sense-llar-sin-hogar.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_adiccion <- read_delim("C:/Users/jorge/Downloads/EDMPROY/discapacitat-discapacidad.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_discapacidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/addiccions-adicciones.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(GeoShape))) %>%
unnest(cols = c(coords))
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(GeoShape))) %>%
unnest(cols = c(coords))
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(GeoShape))) %>%
unnest(cols = c(coords))
library(ggplot2)
library(dplyr)
library(sf)
library(jsonlite)
vulnerabilidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/vulnerabilidad-por-barrios.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
precio_compra <- read_delim("C:/Users/jorge/Downloads/EDMPROY/precio-de-compra-en-idealista.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_mujer <- read_delim("C:/Users/jorge/Downloads/EDMPROY/dona-mujer.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_sinhogar <- read_delim("C:/Users/jorge/Downloads/EDMPROY/sense-llar-sin-hogar.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_adiccion <- read_delim("C:/Users/jorge/Downloads/EDMPROY/discapacitat-discapacidad.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
ayuda_discapacidad <- read_delim("C:/Users/jorge/Downloads/EDMPROY/addiccions-adicciones.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(GeoShape))) %>%
unnest(cols = c(coords))
library(tidyr)
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(GeoShape))) %>%
unnest(cols = c(coords))
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(Geo Shape))) %>%
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(`Geo Shape`))) %>%
unnest(cols = c(coords))
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(`Geo Shape`))) %>%
unnest(cols = c(coords))
vulnerabilidad$`Geo Shape`
vulnerabilidad$`Geo Shape`[1]
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = list(geo_shape_to_coords(`Geo Shape`))) %>%
unnest(cols = c(coords))
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
sf_barrios
sf_barrios
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
geo_shape_to_coords <- function(geo_shape) {
geo_list <- fromJSON(geo_shape)
coords <- geo_list$coordinates[[1]]
data.frame(
lon = sapply(coords, function(coord) coord[1]),
lat = sapply(coords, function(coord) coord[2])
)
}
vulnerabilidad$`Geo Shape`[1]
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`) %>%
unnest(cols = c(coords))
sf_barrios <- st_as_sf(df_coords, coords = c("lon", "lat"), crs = 4326, agr = "constant")
vulnerabilidad %>% rowwise()
mutate(coords = geo_shape_to_coords(`Geo Shape`)
vulnerabilidad %>% rowwise()%>%
vulnerabilidad %>% rowwise()%>%
mutate(coords = geo_shape_to_coords(`Geo Shape`))
df_coords <- vulnerabilidad %>%
rowwise() %>%
mutate(coords = geo_shape_to_coords(`Geo Shape`)) %>%
unnest(cols = c(coords))
runApp('EDM')
install.packages("leaflet")
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
my_sf <- st_read("vulnerabilidad-por-barrios.geojson")
my_sf <- st_read("C:/Users/jorge/Downloads/EDMPROY/vulnerabilidad-por-barrios.geojson")
ggplot(data = my_sf) +
geom_sf() +
theme_minimal() +
ggtitle("Barrios de Valencia")
my_sf
my_sf$vul_global
ggplot(data = my_sf) +
geom_sf(aes(fill = vul_global)) +
scale_fill_viridis_c(option = "viridis", name = "Vulnerabilidad Global") +
theme_minimal() +
ggtitle("Barrios de Valencia según Vulnerabilidad Global")
ggplot(data = my_sf) +
geom_sf(aes(fill = vul_global)) +
#scale_fill_viridis_c(option = "viridis", name = "Vulnerabilidad Global") +
theme_minimal() +
ggtitle("Barrios de Valencia según Vulnerabilidad Global")
ggplot(data = my_sf) +
geom_sf(aes(fill = vul_global)) +
scale_fill_viridis_c(option = "viridis", name = "Vulnerabilidad Global") +
#theme_minimal() +
ggtitle("Barrios de Valencia según Vulnerabilidad Global")
ggplot(data = my_sf) +
geom_sf(aes(fill = vul_global)) +
#theme_minimal() +
ggtitle("Barrios de Valencia según Vulnerabilidad Global")
runApp('EDM')
ui <- fluidPage(
#map
mainPanel(
leafletOutput("vulnerabilidad")
)
)
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('EDM')
runApp('C:/Users/jorge/Downloads/PROY3')
runApp('C:/Users/jorge/Downloads/PROY3/app (1).R')
runApp('EDM')
runApp('EDM')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
print("TRUE")
add_points_to_map("vulnerabilidades", ayuda_adiccion$geo_point_2d, "red", "Ayuda Addicicon")
#FUNCION PARA AÑDIR PUNTOS
add_points_to_map <- function(map, points_data, color, group_name) {
leafletProxy(map) %>%
addCircleMarkers(
data = points_data,
color = color,
fillOpacity = 0.7,
radius = 5,
group = group_name,
popup = ~paste("Nombre:", NAME)
)
}
add_points_to_map("vulnerabilidades", ayuda_discapacidad$geo_point_2d, "blue", "Ayuda a Discpacitados")
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
View(ayuda_sinhogar)
View(ayuda_mujer)
runApp('C:/Users/jorge/Downloads/EDMPROY')
shiny::runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/PROY3/app (1).R')
runApp('C:/Users/jorge/Downloads/PROY3/app (1).R')
View(vulnerabilidad)
install.packages(c("shinylive", "httpuv"))
install.packages(c("shinylive", "httpuv"))
usethis::create_github_token()
gitcreds::gitcreds_set()
usethis::use_github(protocol="https")
install.packages(c("shinylive", "httpuv"))
install.packages("rsconnect")
rsconnect::setAccountInfo(name='aleacionferrica',
token='2E1482BFC9994C8C198B811AD33ADDD5',
secret='<SECRET>')
rsconnect::setAccountInfo(name='aleacionferrica',
token='2E1482BFC9994C8C198B811AD33ADDD5',
secret='6v7UL83RZ/U4jWuBqRBXGbdgKBu3Y2FabzW1bA/j')
rsconnect::deployApp(https://github.com/AleacionFerrica/EDMPORY)
rsconnect::deployApp(C:\Users\jorge\Downloads\EDMPROY)
rsconnect::deployApp(C:/Users/jorge/Downloads/EDMPROY)
rsconnect::deployApp(/Downloads/EDMPROY)
rsconnect::deployApp(Downloads/EDMPROY)
install.packages("shinylive")
shinylive::export(appdir = "C:\Users\jorge\Downloads\EDMPROY", out_dir = "C:\Users\jorge\Downloads\EDMPROY")
shinylive::export(app_dir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY/exported")
shinylive::export(app_dir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY/")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY/")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
destdir = "C:/Users/jorge/Downloads/EDMPROY")
shiny static-assets remove
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
out_dir = "C:/Users/jorge/Downloads/EDMPROY/docs")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
desdir = "C:/Users/jorge/Downloads/EDMPROY/docs")
shinylive::export(appdir = "C:/Users/jorge/Downloads/EDMPROY",
destdir = "C:/Users/jorge/Downloads/EDMPROY/docs")
httpuv::runStaticServer("C:/Users/jorge/Downloads/EDMPROY/docs")
httpuv::runStaticServer("C:/Users/jorge/Downloads/EDMPROY/docs")
httpuv::runStaticServer("C:/Users/jorge/Downloads/EDMPROY/docs")
httpuv::runServer("C:/Users/jorge/Downloads/EDMPROY/docs")
install.packages("servr")
# Cargar el paquete
library(servr)
install.packages("servr")
library(servr)
library(servr)
servr::httd("C:/Users/jorge/Downloads/EDMPROY/exported")
install.packages("shinydashboard")
library(shinydashboard)
library(shiny)
library(shinylive)
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
ggplot(selected_data, aes(x = reorder(nombre, -selected_data[[input$indice]]), y = selected_data[[input$indice]])) +
geom_bar(stat = "identity",fill = "#98ff98") +
theme_minimal() +
labs(
title = "Índice de Vulnerabilidad por Barrio",
x = "Barrio",
y = "Índice de Vulnerabilidad"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
runApp('C:/Users/jorge/Downloads/EDMPROY')
runApp('C:/Users/jorge/Downloads/EDMPROY')
library(shiny); runApp('EDMAPP.R')
shinylive::export(appdir = ".",destdir = "docs")
httpuv::runStaticServer("docs")
httpuv::runStaticServer("docs/", port=8008)
shinylive::export(appdir = "myapp",destdir = "docs")
shiny::runApp()
shinylive::export(appdir = "myapp",destdir = "docs")
httpuv::runStaticServer("docs/", port=8008)
httpuv::runServer("docs/",port = 8008)
httpuv::runServer("docs/",port = 8008)
httpuv::startServer("docs/",port=8008)
httpuv::startServer("docs/",app = "myapp", port=8008)
httpuv::startServer(app = "myapp", port=8008)
library(httpuv)
httpuv::startServer("0.0.0.0",app = "myapp", port=8008)
package_version("httpuv")
package_version("httpuv")
install.packages("httpuv")
install.packages("httpuv")
httpuv::runServer("docs/",port = 8008)
httpuv::runStaticServer("docs/", port=8008)
